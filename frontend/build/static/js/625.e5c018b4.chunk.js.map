{"version":3,"file":"static/js/625.e5c018b4.chunk.js","mappings":"gKAGA,MAAMA,UAAqBC,EAAAA,UAC1BC,WAAAA,CAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACdC,OAAQ,CACN,CACDC,KAAM,eACNC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAExB,CACDD,KAAM,cACNC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAG1BC,QAAS,CACPC,MAAO,CACRC,KAAM,MACNC,OAAQ,IACRC,QAAS,CAAEC,MAAM,IAEhBC,YAAa,CACdC,IAAK,CACHC,YAAY,EACZC,YAAa,MACbC,YAAa,UACbC,aAAc,KAGfC,MAAO,CACRC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAEtDC,OAAQ,CAAC,UAAW,WACpBC,KAAM,CACPC,QAAS,GAGRC,QAAS,CACVC,EAAG,CACDC,UAAW,SAAUC,GACtB,OAAOA,EAAM,OACZ,KAKJ,CAEAC,kBAAAA,CAAmBC,GAEbA,EAAUC,eAAiB5B,KAAKF,MAAM8B,cAAgBD,EAAUE,WAAa7B,KAAKF,MAAM+B,UAC7F7B,KAAK8B,gBAAgB9B,KAAKF,MAAM8B,aAAc5B,KAAKF,MAAM+B,SAE1D,CAGAC,eAAAA,CAAgBF,EAAcC,GAC5B,MAAME,EAAuBC,MAAM,GAAGZ,KAAK,GACrCa,EAAmBD,MAAM,GAAGZ,KAAK,GAEjCc,EAAc,IAAIC,KAClBC,EAAaF,EAAYG,SAG/BT,EAAaU,SAASC,IACvB,MAAMC,EAAkB,IAAIL,KAAKI,EAAYE,WACvCC,EAAaR,EAAcM,EAC3BG,EAAaC,KAAKC,MAAMH,EAAU,OAEpCC,GAAc,GAAKA,EAAa,IAClCZ,GAAsBK,EAAaO,EAAa,GAAK,IAAMG,OAAOP,EAAYQ,aAAe,GAC/F,IAIClB,EAASS,SAASU,IACnB,MAAMC,EAAc,IAAId,KAAKa,EAAQP,WAC/BC,EAAaR,EAAce,EAC3BN,EAAaC,KAAKC,MAAMH,EAAU,OAEpCC,GAAc,GAAKA,EAAa,IAClCV,GAAkBG,EAAaO,EAAa,GAAK,IAAMG,OAAOE,EAAQE,QAAU,GAClF,IAIClD,KAAKmD,SAAS,CACfjD,OAAQ,CACN,CACDC,KAAM,eACNC,KAAM2B,GAEL,CACD5B,KAAM,cACNC,KAAM6B,KAIR,CACAmB,MAAAA,GACC,OACCC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,QAAOC,UACdF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CACbnD,QAASL,KAAKC,MAAMI,QACpBH,OAAQF,KAAKC,MAAMC,OACnBK,KAAK,MACLC,OAAQ,OAIb,EAGD,S","sources":["jsx/components/Dashboard/Dashboard/ChartBarApex.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nclass ChartBarApex extends React.Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\tseries: [\r\n\t\t  {\r\n\t\t\tname: 'Transactions',\r\n\t\t\tdata: [0, 0, 0, 0, 0, 0, 0], // Initialisation avec des valeurs par défaut\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tname: 'Dépenses',\r\n\t\t\tdata: [0, 0, 0, 0, 0, 0, 0], // Initialisation avec des valeurs par défaut\r\n\t\t  },\r\n\t\t],\r\n\t\toptions: {\r\n\t\t  chart: {\r\n\t\t\ttype: 'bar',\r\n\t\t\theight: 350,\r\n\t\t\ttoolbar: { show: true },\r\n\t\t  },\r\n\t\t  plotOptions: {\r\n\t\t\tbar: {\r\n\t\t\t  horizontal: false,\r\n\t\t\t  columnWidth: '57%',\r\n\t\t\t  endingShape: \"rounded\",\r\n\t\t\t  borderRadius: 12,\r\n\t\t\t},\r\n\t\t  },\r\n\t\t  xaxis: {\r\n\t\t\tcategories: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\r\n\t\t  },\r\n\t\t  colors: ['#f9b70e', '#FD5353'], // Couleurs des courbes\r\n\t\t  fill: {\r\n\t\t\topacity: 1,\r\n\t\t\t\r\n\t\t  },\r\n\t\t  tooltip: {\r\n\t\t\ty: {\r\n\t\t\t  formatter: function (val) {\r\n\t\t\t\treturn val + \" FCFA\";\r\n\t\t\t  },\r\n\t\t\t},\r\n\t\t  },\r\n\t\t},\r\n\t  };\r\n\t}\r\n  \r\n\tcomponentDidUpdate(prevProps) {\r\n\t  // Vérifier si les transactions ou les dépenses ont changé et mettre à jour les données\r\n\t  if (prevProps.transactions !== this.props.transactions || prevProps.expenses !== this.props.expenses) {\r\n\t\tthis.updateChartData(this.props.transactions, this.props.expenses);\r\n\t  }\r\n\t}\r\n  \r\n\t// Fonction pour calculer la somme des transactions et des dépenses pour chaque jour de la semaine\r\n\tupdateChartData(transactions, expenses) {\r\n\t  const weekSumsTransactions = Array(7).fill(0); // Sommes des transactions\r\n\t  const weekSumsExpenses = Array(7).fill(0); // Sommes des dépenses\r\n  \r\n\t  const currentDate = new Date();\r\n\t  const currentDay = currentDate.getDay(); // Le jour actuel de la semaine (0 = dimanche, 6 = samedi)\r\n  \r\n\t  // Calcul des sommes pour les transactions\r\n\t  transactions.forEach((transaction) => {\r\n\t\tconst transactionDate = new Date(transaction.createdAt);\r\n\t\tconst diffInTime = currentDate - transactionDate;\r\n\t\tconst diffInDays = Math.floor(diffInTime / (1000 * 3600 * 24));\r\n  \r\n\t\tif (diffInDays >= 0 && diffInDays < 7) {\r\n\t\t  weekSumsTransactions[(currentDay - diffInDays + 7) % 7] += Number(transaction.amountTotal || 0);\r\n\t\t}\r\n\t  });\r\n  \r\n\t  // Calcul des sommes pour les dépenses\r\n\t  expenses.forEach((expense) => {\r\n\t\tconst expenseDate = new Date(expense.createdAt);\r\n\t\tconst diffInTime = currentDate - expenseDate;\r\n\t\tconst diffInDays = Math.floor(diffInTime / (1000 * 3600 * 24));\r\n  \r\n\t\tif (diffInDays >= 0 && diffInDays < 7) {\r\n\t\t  weekSumsExpenses[(currentDay - diffInDays + 7) % 7] += Number(expense.amount || 0);\r\n\t\t}\r\n\t  });\r\n  \r\n\t  // Mettre à jour les séries de données avec les nouvelles sommes\r\n\t  this.setState({\r\n\t\tseries: [\r\n\t\t  {\r\n\t\t\tname: 'Transactions',\r\n\t\t\tdata: weekSumsTransactions,\r\n\t\t  },\r\n\t\t  {\r\n\t\t\tname: 'Dépenses',\r\n\t\t\tdata: weekSumsExpenses,\r\n\t\t  },\r\n\t\t],\r\n\t  });\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"chart\" >\r\n\t\t\t\t<ReactApexChart\r\n\t\t\t\t  options={this.state.options}\r\n\t\t\t\t  series={this.state.series}\r\n\t\t\t\t  type=\"bar\"\r\n\t\t\t\t  height={370} \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChartBarApex;"],"names":["ChartBarApex","React","constructor","props","super","this","state","series","name","data","options","chart","type","height","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","borderRadius","xaxis","categories","colors","fill","opacity","tooltip","y","formatter","val","componentDidUpdate","prevProps","transactions","expenses","updateChartData","weekSumsTransactions","Array","weekSumsExpenses","currentDate","Date","currentDay","getDay","forEach","transaction","transactionDate","createdAt","diffInTime","diffInDays","Math","floor","Number","amountTotal","expense","expenseDate","amount","setState","render","_jsx","id","children","ReactApexChart"],"sourceRoot":""}